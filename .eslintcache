[{"C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\index.js":"1","C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\App.js":"2","C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\components\\Rating.js":"4","C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\components\\ProductCard.js":"5","C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\Screens\\ProductScreen.js":"6","C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\Screens\\Homescreen.js":"7","C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\components\\LoadingBox.js":"8","C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\components\\MessageBox.js":"9","C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\Redux\\store.js":"10","C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\Redux\\data.js":"11","C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\Redux\\reducers\\productListReducer.js":"12","C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\Redux\\constants\\productConstants.js":"13","C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\Redux\\action\\productaActions.js":"14","C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\Redux\\reducers\\productDetailReducer.js":"15","C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\Screens\\CartScreen.js":"16","C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\Redux\\reducers\\cartReducer.js":"17","C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\Redux\\constants\\cartConstants.js":"18","C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\Redux\\action\\cartAction.js":"19","C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\components\\cartCard.js":"20","C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\Screens\\SignInScreen.js":"21","C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\Redux\\reducers\\userReducer.js":"22","C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\Redux\\constants\\userConstants.js":"23","C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\Screens\\RegisterScreen.js":"24","C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\Redux\\action\\userAction.js":"25","C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\Screens\\ShippingAddressScreen.js":"26","C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\components\\CheckOutSteps.js":"27","C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\Screens\\PaymentScreen.js":"28","C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\components\\CheckoutSteps.js":"29","C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\Screens\\PlaceOrderScreen.js":"30","C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\Redux\\constants\\orderConstats.js":"31","C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\Redux\\reducers\\orderReducer.js":"32","C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\Screens\\CreateOrderScreen.js":"33","C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\Screens\\orderHistoryScreen.js":"34","C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\Redux\\action\\orderActions.js":"35","C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\Screens\\OrderHistoryScreen.js":"36","C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\Screens\\ProfileScreen.js":"37","C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\components\\PrivateRoute.js":"38"},{"size":644,"mtime":1612133219372,"results":"39","hashOfConfig":"40"},{"size":4371,"mtime":1612842565401,"results":"41","hashOfConfig":"40"},{"size":362,"mtime":499162500000,"results":"42","hashOfConfig":"40"},{"size":1477,"mtime":1611948007095,"results":"43","hashOfConfig":"40"},{"size":692,"mtime":1612245025294,"results":"44","hashOfConfig":"40"},{"size":4488,"mtime":1612395379708,"results":"45","hashOfConfig":"40"},{"size":1001,"mtime":1612244901733,"results":"46","hashOfConfig":"40"},{"size":209,"mtime":1612462945088,"results":"47","hashOfConfig":"40"},{"size":175,"mtime":1612043699203,"results":"48","hashOfConfig":"40"},{"size":1740,"mtime":1612839273702,"results":"49","hashOfConfig":"40"},{"size":1691,"mtime":1612133067121,"results":"50","hashOfConfig":"40"},{"size":584,"mtime":1612138494840,"results":"51","hashOfConfig":"40"},{"size":370,"mtime":1612137888586,"results":"52","hashOfConfig":"40"},{"size":1174,"mtime":1612394672424,"results":"53","hashOfConfig":"40"},{"size":604,"mtime":1612139425388,"results":"54","hashOfConfig":"40"},{"size":3245,"mtime":1612407824935,"results":"55","hashOfConfig":"40"},{"size":1358,"mtime":1612555422787,"results":"56","hashOfConfig":"40"},{"size":360,"mtime":1612555301125,"results":"57","hashOfConfig":"40"},{"size":1457,"mtime":1612554569660,"results":"58","hashOfConfig":"40"},{"size":1138,"mtime":1612245045925,"results":"59","hashOfConfig":"40"},{"size":2228,"mtime":1612468354592,"results":"60","hashOfConfig":"40"},{"size":2225,"mtime":1612838908993,"results":"61","hashOfConfig":"40"},{"size":874,"mtime":1612836431887,"results":"62","hashOfConfig":"40"},{"size":3050,"mtime":1612473526159,"results":"63","hashOfConfig":"40"},{"size":3702,"mtime":1612839787215,"results":"64","hashOfConfig":"40"},{"size":3256,"mtime":1612487999555,"results":"65","hashOfConfig":"40"},{"size":422,"mtime":1612476150403,"results":"66","hashOfConfig":"40"},{"size":2098,"mtime":1612820910219,"results":"67","hashOfConfig":"40"},{"size":422,"mtime":1612476150403,"results":"68","hashOfConfig":"40"},{"size":5237,"mtime":1612816508771,"results":"69","hashOfConfig":"40"},{"size":816,"mtime":1612733104050,"results":"70","hashOfConfig":"40"},{"size":2371,"mtime":1612820045640,"results":"71","hashOfConfig":"40"},{"size":6639,"mtime":1612816563906,"results":"72","hashOfConfig":"40"},{"size":2057,"mtime":1612840448352,"results":"73","hashOfConfig":"40"},{"size":3280,"mtime":1612819948430,"results":"74","hashOfConfig":"40"},{"size":2057,"mtime":1612840448352,"results":"75","hashOfConfig":"40"},{"size":4470,"mtime":1612841347596,"results":"76","hashOfConfig":"40"},{"size":533,"mtime":1612840572841,"results":"77","hashOfConfig":"40"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"a5mh9w",{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"80"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"102"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"80"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"80"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"125","usedDeprecatedRules":"80"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"80"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"80"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"80"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"149","messages":"150","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"151","messages":"152","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153","usedDeprecatedRules":"80"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"80"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"80"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"80"},"C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\index.js",[],["166","167"],"C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\App.js",[],"C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\reportWebVitals.js",[],"C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\components\\Rating.js",[],"C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\components\\ProductCard.js",[],"C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\Screens\\ProductScreen.js",[],"C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\Screens\\Homescreen.js",["168"],"import React, { useEffect } from \"react\";\r\n\r\nimport ProductCard from \"../components/ProductCard\";\r\nimport LoadingBox from \"../components/LoadingBox\";\r\nimport MessageBox from \"../components/MessageBox\";\r\nimport { listProducts } from \"../Redux/action/productaActions\";\r\n\r\n// redux components\r\n\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n\r\nfunction Homescreen() {\r\n  const dispatch = useDispatch();\r\n\r\n  const productList = useSelector((state) => state.productList);\r\n  const { loading, error, products } = productList;\r\n\r\n  useEffect(() => {\r\n    dispatch(listProducts());\r\n  }, []);\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <LoadingBox />\r\n      ) : error ? (\r\n        <MessageBox variant=\"danger\">{error}</MessageBox>\r\n      ) : (\r\n        <div className=\"row center\">\r\n          {products.map((product) => {\r\n            return <ProductCard key={product._id} product={product} />;\r\n          })}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Homescreen;\r\n","C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\components\\LoadingBox.js",[],"C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\components\\MessageBox.js",[],"C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\Redux\\store.js",[],"C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\Redux\\data.js",[],["169","170"],"C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\Redux\\reducers\\productListReducer.js",[],"C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\Redux\\constants\\productConstants.js",[],"C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\Redux\\action\\productaActions.js",[],"C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\Redux\\reducers\\productDetailReducer.js",[],"C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\Screens\\CartScreen.js",["171","172"],"import React, { useEffect } from \"react\";\r\nimport { addToCart, removeFromCart } from \"../Redux/action/cartAction\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport MessageBox from \"../components/MessageBox\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CartCard from \"../components/cartCard\";\r\n\r\nfunction CartScreen(props) {\r\n  const productId = props.match.params.id;\r\n  const qty = props.location.search\r\n    ? Number(props.location.search.split(\"=\")[1])\r\n    : 1;\r\n  const dispatch = useDispatch();\r\n  const cart = useSelector((state) => state.cart);\r\n  const { cartItems } = cart;\r\n\r\n  const removeFromCartHandler = (id) => {\r\n    dispatch(removeFromCart(id));\r\n  };\r\n\r\n  const checkOutHandler = () => {\r\n    props.history.push(\"/signin?redirect=shipping\");\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (productId) {\r\n      dispatch(addToCart(productId, qty));\r\n    }\r\n  }, [dispatch, productId, qty]);\r\n  return (\r\n    <div className=\"row top\">\r\n      <div className=\"col-2\">\r\n        <h1>shopping cart</h1>\r\n        {cartItems.length === 0 ? (\r\n          <MessageBox>\r\n            Cart is empty <Link to=\"/\">Go to home</Link>\r\n          </MessageBox>\r\n        ) : (\r\n          <ul>\r\n            {cartItems.map((item) => (\r\n              <li key={item.product}>\r\n                <div className=\"row\">\r\n                  <img\r\n                    src={item.image}\r\n                    atl={item.title}\r\n                    className=\"small\"\r\n                  ></img>\r\n\r\n                  <div className=\"min-30\">\r\n                    <Link to={`/product/${item.product}`}>{item.title}</Link>\r\n                  </div>\r\n                  <select\r\n                    value={item.qty}\r\n                    onChange={(e) =>\r\n                      dispatch(addToCart(item.product, Number(e.target.value)))\r\n                    }\r\n                  >\r\n                    {\" \"}\r\n                    {[...Array(item.countInStock).keys()].map((x) => (\r\n                      <option key={x + 1} value={x + 1}>\r\n                        {x + 1}\r\n                      </option>\r\n                    ))}\r\n                  </select>\r\n                  <div>$ {item.price}</div>\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => removeFromCartHandler(item.product)}\r\n                  >\r\n                    Remove\r\n                  </button>\r\n                </div>\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n      <div className=\"col-1\">\r\n        <div className=\"card card-body\">\r\n          <ul>\r\n            <li>\r\n              <h2>\r\n                Subtotal ({cartItems.reduce((a, c) => a + c.qty, 0)}items) : $\r\n                {cartItems.reduce((a, c) => a + c.price * c.qty, 0)}{\" \"}\r\n              </h2>\r\n            </li>\r\n            <li>\r\n              <button\r\n                type=\"button\"\r\n                onClick={checkOutHandler}\r\n                className=\"primary block\"\r\n                disabled={cartItems.length === 0}\r\n              >\r\n                {\" \"}\r\n                Check Out\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CartScreen;\r\n","C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\Redux\\reducers\\cartReducer.js",[],"C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\Redux\\constants\\cartConstants.js",[],"C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\Redux\\action\\cartAction.js",[],"C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\components\\cartCard.js",["173","174","175"],"import React, { useEffect } from \"react\";\r\nimport { addToCart } from \"../Redux/action/cartAction\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction CartCard({ item }) {\r\n  const dispatch = useDispatch();\r\n  const removeFromCartHandler = (id) => {\r\n    console.log(`product id ${id} to be removed`);\r\n  };\r\n  return (\r\n    <div className=\"row\">\r\n      <img src={item.image} atl={item.title} className=\"small\"></img>\r\n\r\n      <div className=\"min-30\">\r\n        <Link to={`/product/${item.product}`}>{item.name}</Link>\r\n      </div>\r\n      <select\r\n        value={item.qty}\r\n        onchange={(e) =>\r\n          dispatch(addToCart(item.product), Number(e.target.value))\r\n        }\r\n      >\r\n        {\" \"}\r\n        {[...Array(item.countInStock).keys()].map((x) => (\r\n          <option key={x + 1} value={x + 1}>\r\n            {x + 1}\r\n          </option>\r\n        ))}\r\n      </select>\r\n      <div>$ {item.price}</div>\r\n      <button type=\"button\" onClick={() => removeFromCartHandler(item.product)}>\r\n        Remove\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default CartCard;\r\n","C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\Screens\\SignInScreen.js",["176"],"import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { signIn } from \"../Redux/action/userAction\";\r\nimport MessageBox from \"../components/MessageBox\";\r\nimport LoadingBox from \"../components/LoadingBox\";\r\n\r\nfunction SignInScreen(props) {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n\r\n  // not 100% sure whats happening\r\n  const redirect = props.location.search\r\n    ? props.location.search.split(\"=\")[1]\r\n    : \"/\";\r\n\r\n  const userSignin = useSelector((state) => state.userSignin);\r\n  const { userInfo, loading, error } = userSignin;\r\n\r\n  const dispatch = useDispatch();\r\n  const submitHandler = (e) => {\r\n    e.preventDefault(); // stop from rfresh the page\r\n    // perform a backend post request to\r\n    dispatch(signIn(email, password));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (userInfo) {\r\n      props.history.push(redirect);\r\n    }\r\n  }, [userInfo]);\r\n\r\n  return (\r\n    <div>\r\n      <form className=\"form\" onSubmit={submitHandler}>\r\n        <div>\r\n          <h1>Sign In</h1>\r\n        </div>\r\n        {loading && <LoadingBox></LoadingBox>}\r\n        {error && <MessageBox variant=\"danger\">{error}</MessageBox>}\r\n        <div>\r\n          <label htmlFor=\"email\">Email address</label>\r\n          <input\r\n            type=\"email\"\r\n            id=\"email\"\r\n            placeholder=\"Enter email\"\r\n            required\r\n            onChange={(e) => setEmail(e.target.value)}\r\n          ></input>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"password\">Password</label>\r\n          <input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            placeholder=\"Enter password\"\r\n            required\r\n            onChange={(e) => setPassword(e.target.value)}\r\n          ></input>\r\n        </div>\r\n        <div>\r\n          <label />\r\n          <button className=\"primary block\" type=\"submit\">\r\n            Sign In\r\n          </button>\r\n        </div>\r\n        <div>\r\n          New customer?{\" \"}\r\n          <Link to={`/register?redirect=${redirect}`}>Create your account</Link>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default SignInScreen;\r\n","C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\Redux\\reducers\\userReducer.js",[],"C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\Redux\\constants\\userConstants.js",[],"C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\Screens\\RegisterScreen.js",[],"C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\Redux\\action\\userAction.js",[],"C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\Screens\\ShippingAddressScreen.js",["177"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { saveShippingAddress } from \"../Redux/action/cartAction\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\n\r\nexport default function ShippingAddressScreen(props) {\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shippingAddress } = cart;\r\n\r\n  const userSignin = useSelector((state) => state.userSignin);\r\n  const { userInfo } = userSignin;\r\n\r\n  const [fullName, setFullName] = useState(shippingAddress.fullName);\r\n  const [address, setAddress] = useState(shippingAddress.address);\r\n  const [city, setCity] = useState(shippingAddress.city);\r\n  const [postalCode, setPostalCode] = useState(shippingAddress.postalCode);\r\n  const [country, setCountry] = useState(shippingAddress.country);\r\n  const dispatch = useDispatch();\r\n  const submitHandler = (e) => {\r\n    e.preventDefault(console.log(\"addressupdated\"));\r\n    dispatch(\r\n      saveShippingAddress({ fullName, address, city, postalCode, country })\r\n    );\r\n    props.history.push(\"/payment\");\r\n  };\r\n  useEffect(() => {\r\n    console.log(userInfo);\r\n    if (!userInfo) {\r\n      props.history.push(\"/signin?redirect=shipping\");\r\n    }\r\n  }, [userInfo]);\r\n  return (\r\n    <div>\r\n      <CheckoutSteps step1 step2></CheckoutSteps>\r\n      <form className=\"form\" onSubmit={submitHandler}>\r\n        <div>\r\n          <h1>Shipping Address</h1>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"fullName\">Full Name</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"fullName\"\r\n            placeholder=\"Enter full name\"\r\n            value={fullName}\r\n            onChange={(e) => setFullName(e.target.value)}\r\n            required\r\n          ></input>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"address\">Address</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"address\"\r\n            placeholder=\"Enter address\"\r\n            value={address}\r\n            onChange={(e) => setAddress(e.target.value)}\r\n            required\r\n          ></input>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"city\">City</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"city\"\r\n            placeholder=\"Enter city\"\r\n            value={city}\r\n            onChange={(e) => setCity(e.target.value)}\r\n            required\r\n          ></input>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"postalCode\">Postal Code</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"postalCode\"\r\n            placeholder=\"Enter postal code\"\r\n            value={postalCode}\r\n            onChange={(e) => setPostalCode(e.target.value)}\r\n            required\r\n          ></input>\r\n        </div>\r\n        <div>\r\n          <label htmlFor=\"country\">Country</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"country\"\r\n            placeholder=\"Enter country\"\r\n            value={country}\r\n            onChange={(e) => setCountry(e.target.value)}\r\n            required\r\n          ></input>\r\n        </div>\r\n        <div>\r\n          <label />\r\n          <button className=\"primary\" type=\"submit\">\r\n            Continue\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\components\\CheckOutSteps.js",[],"C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\Screens\\PaymentScreen.js",["178"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport { savePaymentMethod } from \"../Redux/action/cartAction\";\r\n\r\nexport default function PaymentMethodScreen(props) {\r\n  const cart = useSelector((state) => state.cart);\r\n  const { shippingAddress } = cart;\r\n  const [paymentMethod, setPaymentMethod] = useState(\"PayPal\");\r\n  const dispatch = useDispatch();\r\n  const submitHandler = (e) => {\r\n    e.preventDefault();\r\n    dispatch(savePaymentMethod(paymentMethod));\r\n    props.history.push(\"/placeorder\");\r\n  };\r\n  useEffect(() => {\r\n    if (!shippingAddress.address) {\r\n      props.history.push(\"/shipping?redirect=payment\");\r\n    }\r\n  }, [shippingAddress]);\r\n  return (\r\n    <div>\r\n      <CheckoutSteps step1 step2 step3></CheckoutSteps>\r\n      <form className=\"form\" onSubmit={submitHandler}>\r\n        <div>\r\n          <h1>Payment Method</h1>\r\n        </div>\r\n        <div>\r\n          <div>\r\n            <input\r\n              type=\"radio\"\r\n              id=\"paypal\"\r\n              value=\"PayPal\"\r\n              name=\"paymentMethod\"\r\n              required\r\n              checked\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></input>\r\n            <label htmlFor=\"paypal\">\r\n              <i className=\"fa fa-cc-paypal\" style={{ fontSize: \"5rem\" }}></i>\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div>\r\n            <input\r\n              type=\"radio\"\r\n              id=\"visa\"\r\n              value=\"visa\"\r\n              name=\"paymentMethod\"\r\n              required\r\n              onChange={(e) => setPaymentMethod(e.target.value)}\r\n            ></input>\r\n            <label htmlFor=\"visa\">\r\n              <i class=\"fa fa-cc-visa\" style={{ fontSize: \"5rem\" }}></i>\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <label />\r\n          <button className=\"primary\" type=\"submit\">\r\n            Continue\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\components\\CheckoutSteps.js",[],"C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\Screens\\PlaceOrderScreen.js",["179"],"import React, { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CheckoutSteps from \"../components/CheckoutSteps\";\r\nimport { createOrder } from \"../Redux/action/orderActions\";\r\nimport { ORDER_CREATE_RESET } from \"../Redux/constants/orderConstats\";\r\n\r\nimport LoadingBox from \"../components/LoadingBox\";\r\nimport MessageBox from \"../components/MessageBox\";\r\n\r\nexport default function PlaceOrderScreen(props) {\r\n  const cart = useSelector((state) => state.cart);\r\n  if (!cart.paymentMethod) {\r\n    props.history.push(\"/payment\");\r\n  }\r\n  const orderCreate = useSelector((state) => state.orderCreate);\r\n  const { loading, error, sucess, orderItems } = orderCreate;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const toPrice = (num) => Number(num.toFixed(2)); // rounding totla price to 2 dp\r\n  cart.itemsPrice = toPrice(\r\n    cart.cartItems.reduce((a, c) => a + c.qty * c.price, 0)\r\n  );\r\n\r\n  cart.shippingPrice = cart.itemsPrice > 100 ? toPrice(0) : toPrice(10); // if total price is greater than 100 then free shipping else $10\r\n  cart.taxPrice = toPrice(0.15 * cart.itemsPrice);\r\n  cart.totalPrice = cart.itemsPrice + cart.shippingPrice + cart.taxPrice;\r\n\r\n  const placeOrderHandler = () => {\r\n    // our backend accepts orderItems not cart items, so we need to add an order items in the redux state management\r\n\r\n    dispatch(createOrder({ ...cart, orderItems: cart.cartItems }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (sucess) {\r\n      props.history.push(`/order/${orderItems._id}`);\r\n      dispatch({ type: ORDER_CREATE_RESET });\r\n    }\r\n  }, [sucess]);\r\n\r\n  return (\r\n    <div>\r\n      <CheckoutSteps step1 step2 step3 step4></CheckoutSteps>\r\n      <div className=\"row top\">\r\n        <div className=\"col-2\">\r\n          <ul>\r\n            <li>\r\n              <div className=\"card card-body\">\r\n                <h2>Shipping</h2>\r\n                <p>\r\n                  <strong>Name:</strong> {cart.shippingAddress.fullName} <br />\r\n                  <strong>Address: </strong> {cart.shippingAddress.address},\r\n                  {cart.shippingAddress.city}, {cart.shippingAddress.postalCode}\r\n                  ,{cart.shippingAddress.country}\r\n                </p>\r\n              </div>\r\n            </li>\r\n            <li>\r\n              <div className=\"card card-body\">\r\n                <h2>Payment</h2>\r\n                <p>\r\n                  <strong>Method:</strong> {cart.paymentMethod}\r\n                </p>\r\n              </div>\r\n            </li>\r\n            <li>\r\n              <div className=\"card card-body\">\r\n                <h2>Order Items</h2>\r\n                <ul>\r\n                  {cart.cartItems.map((item) => (\r\n                    <li key={item.product}>\r\n                      <div className=\"row\">\r\n                        <div>\r\n                          <img\r\n                            src={item.image}\r\n                            alt={item.name}\r\n                            className=\"small\"\r\n                          ></img>\r\n                        </div>\r\n                        <div className=\"min-30\">\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.name}\r\n                          </Link>\r\n                        </div>\r\n\r\n                        <div>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </div>\r\n                      </div>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"col-1\">\r\n          <div className=\"card card-body\">\r\n            <ul>\r\n              <li>\r\n                <h2>Order Summary</h2>\r\n              </li>\r\n              <li>\r\n                <div className=\"row\">\r\n                  <div>Items</div>\r\n                  <div>${cart.itemsPrice.toFixed(2)}</div>\r\n                </div>\r\n              </li>\r\n              <li>\r\n                <div className=\"row\">\r\n                  <div>Shipping</div>\r\n                  <div>${cart.shippingPrice.toFixed(2)}</div>\r\n                </div>\r\n              </li>\r\n              <li>\r\n                <div className=\"row\">\r\n                  <div>Tax</div>\r\n                  <div>${cart.taxPrice.toFixed(2)}</div>\r\n                </div>\r\n              </li>\r\n              <li>\r\n                <div className=\"row\">\r\n                  <div>\r\n                    <strong> Order Total</strong>\r\n                  </div>\r\n                  <div>\r\n                    <strong>${cart.totalPrice.toFixed(2)}</strong>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n              <li>\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={placeOrderHandler}\r\n                  className=\"primary block\"\r\n                  disabled={cart.cartItems.length === 0}\r\n                >\r\n                  Place Order\r\n                </button>\r\n              </li>\r\n              {loading && <LoadingBox></LoadingBox>}\r\n              {error && <MessageBox></MessageBox>}\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\Redux\\constants\\orderConstats.js",[],"C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\Redux\\reducers\\orderReducer.js",["180"],"C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\Screens\\CreateOrderScreen.js",["181"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { detailsOrder, payOrder } from \"../Redux/action/orderActions\";\r\nimport LoadingBox from \"../components/LoadingBox\";\r\nimport MessageBox from \"../components/MessageBox\";\r\nimport Axios from \"axios\";\r\nimport { PayPalButton } from \"react-paypal-button-v2\";\r\nimport { ORDER_PAY_RESET } from \"../Redux/constants/orderConstats\";\r\n\r\nexport default function OrderScreen(props) {\r\n  const orderId = props.match.params.id;\r\n  const [sdkReady, setSdkReady] = useState(false);\r\n  const orderDetails = useSelector((state) => state.orderDetails);\r\n  const { order, loading, error } = orderDetails;\r\n\r\n  const orderPay = useSelector((state) => state.orderPay);\r\n  const { loading: loadingPay, error: errorPay, sucess: sucessPay } = orderPay;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const addPayPalScript = async () => {\r\n      const { data } = await Axios.get(\r\n        \"http://localhost:5000/order/config/paypal\"\r\n      );\r\n      const script = document.createElement(\"script\");\r\n      script.type = \"text/javascript\";\r\n      script.src = `https://www.paypal.com/sdk/js?client-id=${data}`;\r\n      script.async = true;\r\n      script.onload = () => {\r\n        setSdkReady(true);\r\n      };\r\n      console.log(script);\r\n      document.body.appendChild(script);\r\n    };\r\n    if (!order || sucessPay || (order && order._id !== orderId)) {\r\n      dispatch({ type: ORDER_PAY_RESET });\r\n      console.log(\"sucesspay \" + sucessPay);\r\n      dispatch(detailsOrder(orderId));\r\n    } else {\r\n      if (!order.isPaid) {\r\n        if (!window.paypal) {\r\n          addPayPalScript();\r\n        } else {\r\n          setSdkReady(true);\r\n        }\r\n      }\r\n    }\r\n  }, [dispatch, order, orderId, sdkReady]);\r\n  const successPaymentHandler = (paymentResult) => {\r\n    // TODO: dispatch pay order\r\n    dispatch(payOrder(order, paymentResult));\r\n  };\r\n\r\n  return loading ? (\r\n    <LoadingBox></LoadingBox>\r\n  ) : error ? (\r\n    <MessageBox variant=\"danger\">{error}</MessageBox>\r\n  ) : (\r\n    <div>\r\n      <h1>Order {order._id}</h1>\r\n      <div className=\"row top\">\r\n        <div className=\"col-2\">\r\n          <ul>\r\n            <li>\r\n              <div className=\"card card-body\">\r\n                <h2>Shipping</h2>\r\n                <p>\r\n                  <strong>Name:</strong> {order.shippingAddress.fullName} <br />\r\n                  <strong>Address: </strong> {order.shippingAddress.address},\r\n                  {order.shippingAddress.city},{\" \"}\r\n                  {order.shippingAddress.postalCode},\r\n                  {order.shippingAddress.country}\r\n                </p>\r\n                {order.isDelivered ? (\r\n                  <MessageBox variant=\"success\">\r\n                    Delivered at {order.deliveredAt}\r\n                  </MessageBox>\r\n                ) : (\r\n                  <MessageBox variant=\"danger\">Not Delivered</MessageBox>\r\n                )}\r\n              </div>\r\n            </li>\r\n            <li>\r\n              <div className=\"card card-body\">\r\n                <h2>Payment</h2>\r\n                <p>\r\n                  <strong>Method:</strong> {order.paymentMethod}\r\n                </p>\r\n                {order.isPaid ? (\r\n                  <MessageBox variant=\"success\">\r\n                    Paid at {order.paidAt}\r\n                  </MessageBox>\r\n                ) : (\r\n                  <MessageBox variant=\"danger\">Not Paid</MessageBox>\r\n                )}\r\n              </div>\r\n            </li>\r\n            <li>\r\n              <div className=\"card card-body\">\r\n                <h2>Order Items</h2>\r\n                <ul>\r\n                  {order.orderItems.map((item) => (\r\n                    <li key={item.product}>\r\n                      <div className=\"row\">\r\n                        <div>\r\n                          <img\r\n                            src={item.image}\r\n                            alt={item.title}\r\n                            className=\"small\"\r\n                          ></img>\r\n                        </div>\r\n                        <div className=\"min-30\">\r\n                          <Link to={`/product/${item.product}`}>\r\n                            {item.title}\r\n                          </Link>\r\n                        </div>\r\n\r\n                        <div>\r\n                          {item.qty} x ${item.price} = ${item.qty * item.price}\r\n                        </div>\r\n                      </div>\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </div>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <div className=\"col-1\">\r\n          <div className=\"card card-body\">\r\n            <ul>\r\n              <li>\r\n                <h2>Order Summary</h2>\r\n              </li>\r\n              <li>\r\n                <div className=\"row\">\r\n                  <div>Items</div>\r\n                  <div>${order.itemsPrice.toFixed(2)}</div>\r\n                </div>\r\n              </li>\r\n              <li>\r\n                <div className=\"row\">\r\n                  <div>Shipping</div>\r\n                  <div>${order.shippingPrice.toFixed(2)}</div>\r\n                </div>\r\n              </li>\r\n              <li>\r\n                <div className=\"row\">\r\n                  <div>Tax</div>\r\n                  <div>${order.taxPrice.toFixed(2)}</div>\r\n                </div>\r\n              </li>\r\n              <li>\r\n                <div className=\"row\">\r\n                  <div>\r\n                    <strong> Order Total</strong>\r\n                  </div>\r\n                  <div>\r\n                    <strong>${order.totalPrice.toFixed(2)}</strong>\r\n                  </div>\r\n                </div>\r\n              </li>\r\n              <li>\r\n                {!order.isPaid && (\r\n                  <li>\r\n                    {!sdkReady ? (\r\n                      <LoadingBox></LoadingBox>\r\n                    ) : (\r\n                      <React.Fragment>\r\n                        {errorPay && (\r\n                          <MessageBox variant=\"danger\">{errorPay}</MessageBox>\r\n                        )}\r\n                        {loadingPay && <LoadingBox></LoadingBox>}\r\n                        <PayPalButton\r\n                          amount={order.totalPrice}\r\n                          onSuccess={successPaymentHandler}\r\n                        ></PayPalButton>\r\n                      </React.Fragment>\r\n                    )}\r\n                  </li>\r\n                )}\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\Screens\\orderHistoryScreen.js",["182","183","184"],"C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\Redux\\action\\orderActions.js",[],"C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\Screens\\OrderHistoryScreen.js",["185","186","187"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Axios from \"axios\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { getOrderHistory } from \"../Redux/action/orderActions\";\r\nimport LoadingBox from \"../components/LoadingBox\";\r\nimport MessageBox from \"../components/MessageBox\";\r\n\r\nfunction OrderHistoryScreen(props) {\r\n  const orderHistory = useSelector((state) => state.orderHistory);\r\n  const { loading, error, orders } = orderHistory;\r\n  const userSignin = useSelector((state) => state.userSignin);\r\n  const { userInfo } = userSignin;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      props.history.push(\"/signin?redirect=ordershistory\");\r\n    } else {\r\n      dispatch(getOrderHistory());\r\n    }\r\n  }, [userInfo]);\r\n\r\n  return (\r\n    <div>\r\n      {loading ? (\r\n        <LoadingBox />\r\n      ) : error ? (\r\n        <MessageBox variant=\"danger\">{error}</MessageBox>\r\n      ) : (\r\n        <div className=\"row center\">\r\n          <h1>Order History</h1>\r\n          <table style={{ width: \"100%\" }}>\r\n            <thead>\r\n              <tr>\r\n                <th>Order id</th>\r\n                <th>Price</th>\r\n                <th>Purchase Date</th>\r\n                <th>Details</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {console.log(orders)}\r\n              {orders.map((order) => {\r\n                return (\r\n                  <tr>\r\n                    {\" \"}\r\n                    <td>{order._id}</td>\r\n                    <td>{order.totalPrice}</td>\r\n                    <td>{order.createdAt}</td>\r\n                    <td>\r\n                      {\" \"}\r\n                      <Link to={`/order/${order._id}`}>\r\n                        <button>Details</button>\r\n                      </Link>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default OrderHistoryScreen;\r\n","C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\Screens\\ProfileScreen.js",["188"],"import React, { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { detailsUser, updateUserProfile } from \"../Redux/action/userAction\";\r\nimport LoadingBox from \"../components/LoadingBox\";\r\nimport MessageBox from \"../components/MessageBox\";\r\nimport { USER_UPDATE_PROFILE_RESET } from \"../Redux/constants/userConstants\";\r\n\r\nfunction ProfileScreen(props) {\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\r\n\r\n  const userSignin = useSelector((state) => state.userSignin);\r\n  const { userInfo } = userSignin;\r\n  const userDetails = useSelector((state) => state.userDetails);\r\n  const { loading, error, user } = userDetails;\r\n  const userUpdateProfile = useSelector((state) => state.userUpdateProfile);\r\n  const {\r\n    success: successUpdate,\r\n    error: errorUpdate,\r\n    loading: loadingUpdate,\r\n  } = userUpdateProfile;\r\n\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      props.history.push(\"/signin?redirect=profile\");\r\n    } else {\r\n      if (!user) {\r\n        dispatch({ type: USER_UPDATE_PROFILE_RESET });\r\n        dispatch(detailsUser(userInfo._id));\r\n      } else {\r\n        setName(user.name);\r\n        setEmail(user.email);\r\n      }\r\n    }\r\n  }, [dispatch, userInfo._id, user]);\r\n\r\n  const submitHandler = (e) => {\r\n    console.log(\"update pressed\");\r\n    e.preventDefault();\r\n    // dispatch update profile\r\n    if (password !== confirmPassword) {\r\n      alert(\"Password and Confirm Password Are Not Matched\");\r\n    } else {\r\n      dispatch(updateUserProfile({ userId: user._id, name, email, password }));\r\n    }\r\n  };\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h1>User Profile</h1> <h2>Notes:</h2>\r\n        <ul>\r\n          <li>\r\n            This mock profile update page allows the user to change their name\r\n            email and password,\r\n          </li>\r\n          <li>The form can modifed by adding new input areas</li>\r\n          <li>\r\n            The back REST API also need to be updated if new inputs are added to\r\n            properly save them in the backend db\r\n          </li>\r\n        </ul>\r\n      </div>\r\n      {loading ? (\r\n        <LoadingBox></LoadingBox>\r\n      ) : error ? (\r\n        <MessageBox variant=\"danger\">{error}</MessageBox>\r\n      ) : (\r\n        <form\r\n          className=\"form\"\r\n          onSubmit={submitHandler}\r\n          style={{\r\n            border: \"black 1px solid\",\r\n            marginTop: \"5rem\",\r\n            borderRadius: \"1rem\",\r\n          }}\r\n        >\r\n          {loadingUpdate && <LoadingBox></LoadingBox>}\r\n          {errorUpdate && (\r\n            <MessageBox variant=\"danger\">{errorUpdate}</MessageBox>\r\n          )}\r\n          {successUpdate && (\r\n            <MessageBox variant=\"success\">\r\n              Profile Updated Successfully\r\n            </MessageBox>\r\n          )}{\" \"}\r\n          <div>\r\n            <label htmlFor=\"name\">Name</label>\r\n            <input\r\n              id=\"name\"\r\n              type=\"text\"\r\n              placeholder={user.name}\r\n              value={name}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></input>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              id=\"email\"\r\n              type=\"email\"\r\n              placeholder={user.email}\r\n              value={email}\r\n              onChange={(e) => setName(e.target.value)}\r\n            ></input>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              id=\"password\"\r\n              type=\"password\"\r\n              placeholder=\"Enter password\"\r\n              onChange={(e) => setPassword(e.target.value)}\r\n            ></input>\r\n          </div>\r\n          <div>\r\n            <label htmlFor=\"confirmPassword\">confirm Password</label>\r\n            <input\r\n              id=\"confirmPassword\"\r\n              type=\"password\"\r\n              placeholder=\"Enter confirm password\"\r\n              onChange={(e) => setConfirmPassword(e.target.value)}\r\n            ></input>\r\n          </div>\r\n          <div>\r\n            <label />\r\n            <button className=\"primary\" type=\"submit\">\r\n              Update\r\n            </button>\r\n          </div>\r\n        </form>\r\n      )}\r\n      ;\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProfileScreen;\r\n","C:\\Users\\rafid\\Desktop\\amazona\\frontend\\src\\components\\PrivateRoute.js",[],{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","replacedBy":"192"},{"ruleId":"193","severity":1,"message":"194","line":20,"column":6,"nodeType":"195","endLine":20,"endColumn":8,"suggestions":"196"},{"ruleId":"189","replacedBy":"197"},{"ruleId":"191","replacedBy":"198"},{"ruleId":"199","severity":1,"message":"200","line":6,"column":8,"nodeType":"201","messageId":"202","endLine":6,"endColumn":16},{"ruleId":"203","severity":1,"message":"204","line":43,"column":19,"nodeType":"205","endLine":47,"endColumn":20},{"ruleId":"199","severity":1,"message":"206","line":1,"column":17,"nodeType":"201","messageId":"202","endLine":1,"endColumn":26},{"ruleId":"199","severity":1,"message":"207","line":3,"column":23,"nodeType":"201","messageId":"202","endLine":3,"endColumn":34},{"ruleId":"203","severity":1,"message":"204","line":13,"column":7,"nodeType":"205","endLine":13,"endColumn":64},{"ruleId":"193","severity":1,"message":"208","line":31,"column":6,"nodeType":"195","endLine":31,"endColumn":16,"suggestions":"209"},{"ruleId":"193","severity":1,"message":"210","line":31,"column":6,"nodeType":"195","endLine":31,"endColumn":16,"suggestions":"211"},{"ruleId":"193","severity":1,"message":"210","line":20,"column":6,"nodeType":"195","endLine":20,"endColumn":23,"suggestions":"212"},{"ruleId":"193","severity":1,"message":"213","line":41,"column":6,"nodeType":"195","endLine":41,"endColumn":14,"suggestions":"214"},{"ruleId":"215","severity":1,"message":"216","line":81,"column":7,"nodeType":"217","messageId":"218","endLine":83,"endColumn":8},{"ruleId":"193","severity":1,"message":"219","line":50,"column":6,"nodeType":"195","endLine":50,"endColumn":42,"suggestions":"220"},{"ruleId":"199","severity":1,"message":"221","line":1,"column":28,"nodeType":"201","messageId":"202","endLine":1,"endColumn":36},{"ruleId":"199","severity":1,"message":"222","line":3,"column":8,"nodeType":"201","messageId":"202","endLine":3,"endColumn":13},{"ruleId":"193","severity":1,"message":"223","line":24,"column":6,"nodeType":"195","endLine":24,"endColumn":16,"suggestions":"224"},{"ruleId":"199","severity":1,"message":"221","line":1,"column":28,"nodeType":"201","messageId":"202","endLine":1,"endColumn":36},{"ruleId":"199","severity":1,"message":"222","line":3,"column":8,"nodeType":"201","messageId":"202","endLine":3,"endColumn":13},{"ruleId":"193","severity":1,"message":"223","line":23,"column":6,"nodeType":"195","endLine":23,"endColumn":16,"suggestions":"225"},{"ruleId":"193","severity":1,"message":"226","line":38,"column":6,"nodeType":"195","endLine":38,"endColumn":36,"suggestions":"227"},"no-native-reassign",["228"],"no-negated-in-lhs",["229"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.","ArrayExpression",["230"],["228"],["229"],"no-unused-vars","'CartCard' is defined but never used.","Identifier","unusedVar","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useEffect' is defined but never used.","'useSelector' is defined but never used.","React Hook useEffect has missing dependencies: 'props.history' and 'redirect'. Either include them or remove the dependency array.",["231"],"React Hook useEffect has a missing dependency: 'props.history'. Either include it or remove the dependency array.",["232"],["233"],"React Hook useEffect has missing dependencies: 'dispatch', 'orderItems._id', and 'props.history'. Either include them or remove the dependency array.",["234"],"no-lone-blocks","Block is redundant.","BlockStatement","redundantBlock","React Hook useEffect has a missing dependency: 'sucessPay'. Either include it or remove the dependency array.",["235"],"'useState' is defined but never used.","'Axios' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'props.history'. Either include them or remove the dependency array.",["236"],["237"],"React Hook useEffect has missing dependencies: 'props.history' and 'userInfo'. Either include them or remove the dependency array.",["238"],"no-global-assign","no-unsafe-negation",{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},{"desc":"243","fix":"244"},{"desc":"245","fix":"246"},{"desc":"247","fix":"248"},{"desc":"249","fix":"250"},{"desc":"251","fix":"252"},{"desc":"251","fix":"253"},{"desc":"254","fix":"255"},"Update the dependencies array to be: [dispatch]",{"range":"256","text":"257"},"Update the dependencies array to be: [props.history, redirect, userInfo]",{"range":"258","text":"259"},"Update the dependencies array to be: [props.history, userInfo]",{"range":"260","text":"261"},"Update the dependencies array to be: [props.history, shippingAddress]",{"range":"262","text":"263"},"Update the dependencies array to be: [dispatch, orderItems._id, props.history, sucess]",{"range":"264","text":"265"},"Update the dependencies array to be: [dispatch, order, orderId, sdkReady, sucessPay]",{"range":"266","text":"267"},"Update the dependencies array to be: [dispatch, props.history, userInfo]",{"range":"268","text":"269"},{"range":"270","text":"269"},"Update the dependencies array to be: [dispatch, userInfo._id, user, userInfo, props.history]",{"range":"271","text":"272"},[592,594],"[dispatch]",[995,1005],"[props.history, redirect, userInfo]",[1234,1244],"[props.history, userInfo]",[759,776],"[props.history, shippingAddress]",[1624,1632],"[dispatch, orderItems._id, props.history, sucess]",[1815,1851],"[dispatch, order, orderId, sdkReady, sucessPay]",[843,853],"[dispatch, props.history, userInfo]",[814,824],[1385,1415],"[dispatch, userInfo._id, user, userInfo, props.history]"]